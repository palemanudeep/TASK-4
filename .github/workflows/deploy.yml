name: Deploy Medusa Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Update and Install Dependencies
      run: |
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=60 ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          set -e  # Exit immediately if a command exits with a non-zero status

          # Update and install necessary packages
          sudo apt-get update -y || exit 1
          sudo apt-get upgrade -y || exit 1
          
          # Install Node.js 18.x
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - || exit 1
          sudo apt install -y nodejs || exit 1
          
          # Install PostgreSQL
          sudo apt install -y postgresql postgresql-contrib || exit 1
          sudo systemctl start postgresql || exit 1
          sudo systemctl enable postgresql || exit 1

          # Create PostgreSQL database and user
          sudo -u postgres psql -c "CREATE USER medusabackend WITH PASSWORD 'medusa123' CREATEDB;" || exit 1
          sudo -u postgres psql -c "CREATE DATABASE medusabackend OWNER medusabackend;" || exit 1
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE medusabackend TO medusabackend;" || exit 1

          # Install Redis
          sudo apt install -y redis-server || exit 1
          sudo systemctl enable redis-server || exit 1
          sudo systemctl start redis-server || exit 1

          # Clone the Medusa app repository
          if [ -d "./my-app-store" ]; then
            echo "Directory ./my-app-store exists. Deleting it..."
            sudo rm -rf ./my-app-store || exit 1
          fi

          echo "Cloning the repository..."
          git clone https://github.com/palemanudeep/Deploy-Medusa-on-AWS-EC2.git ./my-app-store || exit 1

          cd ./my-app-store || exit 1

          # Set up .env file
          touch .env || exit 1
          echo "DATABASE_URL=postgres://medusabackend:medusa123@localhost:5432/medusabackend" > .env || exit 1
          echo "REDIS_URL=redis://localhost:6379" >> .env || exit 1

          # Install Medusa dependencies
          sudo npm install -g @medusajs/medusa-cli || exit 1
          npm install || exit 1
          npm install cross-env --save-dev || exit 1

          # Run database migrations
          npx medusa migrations run || exit 1

          # Create Medusa admin user
          npx medusa user -e anudeep@gmail.com -p anudeep123 || exit 1

          # Check for process using port 9000 and kill it if necessary
          if lsof -i :9000; then
            echo "Killing process running on port 9000..."
            lsof -ti:9000 | xargs kill -9 || exit 1
          fi

          # Start the Medusa application in the background
          nohup sudo npm run start &> medusa.log & || exit 1

          echo "Medusa deployment initiated."
        EOF
