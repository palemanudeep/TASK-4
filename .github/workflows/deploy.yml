name: Deploy Medusa Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Update and Install Dependencies
      run: |
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=60 ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          # Update and install necessary packages
          sudo apt-get update -y
          sudo apt-get upgrade -y
          
          # Install Node.js 18.x
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt install -y nodejs
          
          # Install PostgreSQL
          sudo apt install -y postgresql postgresql-contrib
          sudo systemctl start postgresql

          # Create PostgreSQL database and user
          sudo -u postgres psql -c "CREATE USER medusabackend WITH PASSWORD 'medusa123' CREATEDB;"
          sudo -u postgres psql -c "CREATE DATABASE medusabackend OWNER medusabackend;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE medusabackend TO medusabackend;"
          # Install Redis
          sudo apt install -y redis-server
          sudo systemctl enable redis-server
          sudo systemctl start redis-server


          # Remove the existing directory if it exists
          if [ -d "./my-app-store" ]; then
            sudo rm -rf ./my-app-store
          fi

          # Clone the existing Medusa app repository using HTTPS
          git clone https://github.com/palemanudeep/Deploy-Medusa-on-AWS-EC2.git ./my-app-store
          
          # Navigate to the app directory
          cd ./my-app-store

          # Create .env file if it does not exist
          touch .env
          
          # Modify the .env file
          echo "DATABASE_URL=postgres://medusabackend:medusa123@localhost:5432/medusabackend" > .env
          echo "REDIS_URL=redis://localhost:6379" >> .env

          # Install dependencies
          sudo npm install -g @medusajs/medusa-cli
          npm install cross-env --save-dev
          npx medusa migrations run
          npx medusa user -e anudeep@gmail.com -p anudeep123


          # Start the application
          nohup sudo npm run start &> medusa.log &
        EOF
